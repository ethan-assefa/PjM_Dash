# Generated by Django 5.0.8 on 2025-03-10 12:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Collaborators',
            fields=[
                ('collaborator_id', models.AutoField(primary_key=True, serialize=False)),
                ('collab_name', models.CharField(max_length=100)),
                ('collab_describe', models.TextField(blank=True, null=True)),
                ('is_funder', models.BooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'Collaborators',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Auditlogs',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('act', models.TextField()),
                ('audit_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AuditLogs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=100)),
                ('proj_describe', models.TextField(blank=True, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('proj_status', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Projects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Deliverables',
            fields=[
                ('deliverable_id', models.AutoField(primary_key=True, serialize=False)),
                ('deliverable_name', models.CharField(max_length=100)),
                ('deliverable_describe', models.TextField(blank=True, null=True)),
                ('deliverable_status', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.projects')),
            ],
            options={
                'db_table': 'Deliverables',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tasks',
            fields=[
                ('task_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.CharField(max_length=100)),
                ('task_status', models.CharField(max_length=15)),
                ('task_priority', models.CharField(max_length=10)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, db_column='assigned_to', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, related_name='tasks_created_by_set', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.projects')),
            ],
            options={
                'db_table': 'Tasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Updates',
            fields=[
                ('update_id', models.AutoField(primary_key=True, serialize=False)),
                ('update_text', models.TextField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(db_column='created_by', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.projects')),
            ],
            options={
                'db_table': 'Updates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProjectCollaborators',
            fields=[
                ('projcollab_id', models.AutoField(primary_key=True, serialize=False)),
                ('collaborator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.collaborators')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.projects')),
            ],
            options={
                'db_table': 'Project_Collaborators',
                'managed': True,
                'unique_together': {('project', 'collaborator')},
            },
        ),
        migrations.CreateModel(
            name='TaskDeliverables',
            fields=[
                ('taskdeliv_id', models.AutoField(primary_key=True, serialize=False)),
                ('deliverable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.deliverables')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.tasks')),
            ],
            options={
                'db_table': 'Task_Deliverables',
                'managed': True,
                'unique_together': {('task', 'deliverable')},
            },
        ),
    ]
